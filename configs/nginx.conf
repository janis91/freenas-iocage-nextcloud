load_module /usr/local/libexec/nginx/ngx_mail_module.so;
load_module /usr/local/libexec/nginx/ngx_stream_module.so;

#user  nobody;
worker_processes  4;

# This default error log path is compiled-in to make sure configuration parsing
# errors are logged somewhere, especially during unattended boot when stderr
# isn't normally logged anywhere. This path will be touched on every nginx
# start regardless of error log location configured here. See
# https://trac.nginx.org/nginx/ticket/147 for more info.
#
#error_log  /var/log/nginx/error.log;
#

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    # X-Frame
    add_header X-Frame-Options sameorigin;
    add_header Referrer-Policy "no-referrer";

    #turn off server tokens
    server_tokens off;
    # add pound to remove
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        off;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  off;
    #	ssl_certificate /usr/local/etc/nginx/server.crt;
    #	ssl_certificate_key /usr/local/etc/nginx/server.key;

    #######SSL SECTION########################################
    # global SSL options with Perfect Forward Secrecy (PFS) high strength ciphers
    # first. PFS ciphers are those which start with ECDHE which means (EC)DHE
    # which stands for (Elliptic Curve) Diffie-Hellman Ephemeral. 256bit preference.

    # ciphers for RSA signed certificates

    #    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-RSA-RC4-SHA; #SSLLABS B
    #     ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH; #SSLLAB A+
    #ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    # recommendations from rg305
    ssl_ciphers CHACHA20:ECDSA+AESGCM:ECDHE+AESGCM:ECDSA+SHA384:ECDSA+SHA256:ECDHE+SHA384:ECDHE+SHA256:ECDSA:ECDHE:!3DES:!ADH:!AECDH:!AESCCM:!aNULL:!CAMELLIA:!DES:!DHE:!DSS:!eNULL:!EXP:!IDEA:!LOW:!MD5:!MEDIUM:!NULL:!PSK:!RC4:!SEED:!SHA1:!SRP;

    #ssl_ecdh_curve sect571r1:secp521r1:brainpoolP512r1:sect409r1:brainpoolP384r1:secp384r1;

    #ssl_ciphers EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4;
    # Nginx with BoringSSL ciphers for Elliptic Curve Digital Signature Algorithm
    # (ECDSA) signed certificates. equal preference groups.
    # ssl_ciphers [ECDHE-ECDSA-CHACHA20-POLY1305|ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-AES256-GCM-SHA384]:[ECDHE-ECDSA-AES128-SHA256|ECDHE-ECDSA-AES256-SHA384]:[ECDHE-ECDSA-AES128-SHA|ECDHE-ECDSA-AES256-SHA];

    #generic ssl section for ssl branch
	ssl_certificate /usr/local/etc/letsencrypt/live/yourhostnamehere/fullchain.pem;
    ssl_certificate_key /usr/local/etc/letsencrypt/live/yourhostnamehere/privkey.pem;
	ssl_trusted_certificate /usr/local/etc/letsencrypt/live/yourhostnamehere/chain.pem;
    #    ssl_certificate /usr/local/etc/nginx/ssl/nginx-selfsigned.crt;
    #    ssl_certificate_key /usr/local/etc/nginx/ssl/nginx-selfsigned.key;
    ssl_dhparam /usr/local/etc/nginx/ssl/dhparam.pem;

    ssl_ecdh_curve secp384r1;              # 384 bit prime modulus curve efficiently supports ECDHE ssl_ciphers up to a SHA384 hash
    ssl_prefer_server_ciphers on;          # the preferred ciphers are listed on the server by "ssl_ciphers"
    ssl_protocols TLSv1.2; # TLSv1.1 TLSv1;   # protocols, the order is unimportant
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 128s;              # how long before the client and server must renegotiate the ssl key
    ssl_stapling on;                       # staple the ssl cert to the initial reply returned to the client for speed
    ssl_stapling_verify on;

    ######END SSL SECTION########################################
    server {
        listen      80;
        server_name  yourhostnamehere www.yourhostnamehere;
        return 301 https://$server_name$request_uri;
        #return 301 https://$host$request_uri;
        #return 301 https://yourhostnamehere$request_uri;
        #rewrite     ^   https://$server_name$request_uri? permanent;
    }

    server {
        listen      443 ssl http2;
        server_name  yourhostnamehere www.yourhostnamehere;

        # 	add_header Strict-Transport-Security "max-age=0; includeSubDomains; preload;";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
        add_header Referrer-Policy no-referrer;

        # Remove X-Powered-By, which is an information leak
        fastcgi_hide_header X-Powered-By;

        root /usr/local/www;
        index index.html;

        location = /robots.txt { 
            allow all; 
            access_log off; 
            log_not_found off;
        }
        location = /favicon.ico { 
            access_log off; 
            log_not_found off;
            alias /usr/local/www/favicon.ico;
        }

        # Fix carddav and caldav errors
        location = /.well-known/carddav {
            return 301 $scheme://$host/nextcloud/remote.php/dav;
        }

        location = /.well-known/caldav {
            return 301 $scheme://$host/nextcloud/remote.php/dav;
        }


         location ^~ /nextcloud {
            client_max_body_size 512M;
            fastcgi_buffers 64 4K;
            # Enable gzip but do not remove ETag headers
            gzip on;
            gzip_vary on;
            gzip_comp_level 4;
            gzip_min_length 256;
            gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
            gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;


            error_page 403 /nextcloud/core/templates/403.php;
            error_page 404 /nextcloud/core/templates/404.php;

            location /nextcloud {
                rewrite ^ /nextcloud/index.php$uri;
            }
            location ~ ^\/nextcloud\/(?:build|tests|config|lib|3rdparty|templates|data)\/ {
                deny all;
            }
            location ~ ^\/nextcloud\/(?:\.|autotest|occ|issue|indie|db_|console) {
                deny all;
            }

            location ~ ^\/nextcloud\/(?:index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|ocs-provider\/.+|ocm-provider\/.+)\.php(?:$|\/) {
                fastcgi_split_path_info ^(.+?\.php)(\/.*|)$;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
                fastcgi_param HTTPS on;
                #Avoid sending the security headers twice
                fastcgi_param modHeadersAvailable true;
                fastcgi_param front_controller_active true;
                fastcgi_pass php-handler;
                fastcgi_intercept_errors on;
                fastcgi_request_buffering off;
            }

            location ~ ^\/nextcloud\/(?:updater|ocs-provider|ocm-provider)(?:$|\/) {
                try_files $uri/ =404;
                index index.php;
            }

            # Adding the cache control header for js and css files
            # Make sure it is BELOW the PHP block
            location ~ ^\/nextcloud\/.+[^\/]\.(?:css|js|woff2?|svg|gif)$ {
                try_files $uri /nextcloud/index.php$request_uri;
                add_header Cache-Control "public, max-age=15778463";
                # Add headers to serve security related headers  (It is intended
                # to have those duplicated to the ones above)
                # Before enabling Strict-Transport-Security headers please read
                # into this topic first.
                # add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";
                add_header X-Content-Type-Options nosniff;
                add_header X-XSS-Protection "1; mode=block";
                add_header X-Robots-Tag none;
                add_header X-Download-Options noopen;
                add_header X-Permitted-Cross-Domain-Policies none;
                add_header Referrer-Policy no-referrer;

                # Optional: Don't log access to assets
                access_log off;
            }

            location ~ ^\/nextcloud\/.+[^\/]\.(?:png|html|ttf|ico|jpg|jpeg)$ {
                try_files $uri /nextcloud/index.php$request_uri;
                # Optional: Don't log access to other assets
                access_log off;
            }

        }
    }
}

